MEMORY {
	#include "x16.cfginc"

	SIGNATURE:start = $C000, size = $0010, fill=yes, fillval=$00;
	KERNAL:   start = $C010, size = $3E98, fill=yes, fillval=$AA;
	JMPTBL:   start = $FEA8, size = $0152, fill=yes, fillval=$AA;
	VECTORS:  start = $FFFA, size = $0006, fill=yes, fillval=$AA;
}

SEGMENTS {
	ZPKERNAL:   load = ZPKERNAL, type = zp;
	ZPCHANNEL:  load = ZPKERNAL, type = zp;
	ZPFONTS:    load = ZPKERNAL, type = zp;

	KVAR:       load = KVAR,     type = bss;
	VARCHANNEL: load = KVAR,     type = bss;
	KVEC816:    load = KVEC816,  type = bss;
	I2CMUTEX: 	load = I2CMUTEX, type = bss;
	KVAR2:      load = KVAR2,    type = bss;

	GDRVVEC:    load = GDRVVEC,  type = bss;
	KVECTORS:   load = KVECTORS, type = bss;
	KEYMAP:     load = KEYMAP,   type = bss;
	KVARSB0:    load = KVARSB0,  type = bss, define=yes;
	VARFONTS:   load = KVARSB0,  type = bss, define=yes;
	USERPARM:   load = USERPARM, type = bss;

	SIGNATURE:load = SIGNATURE,   type = ro;
	INIT:     load = KERNAL,   type = ro;
	EDITOR:   load = KERNAL,   type = ro;
	SCREEN:   load = KERNAL,   type = ro;
	KBDBUF:   load = KERNAL,   type = ro;
	PS2:      load = KERNAL,   type = ro;
	PS2KBD:   load = KERNAL,   type = ro;
	PS2MOUSE: load = KERNAL,   type = ro;
	JOYSTICK: load = KERNAL,   type = ro;
	IEEESWTCH:load = KERNAL,   type = ro;
	SERIAL:   load = KERNAL,   type = ro;
	MEMORY:   load = KERNAL,   type = ro;
	LZSA:     load = KERNAL,   type = ro;
	RS232:    load = KERNAL,   type = ro;
	CHANNEL:  load = KERNAL,   type = ro;
	CLOCK:    load = KERNAL,   type = ro;
	C816_UTIL: load = KERNAL,  type = ro;
	C816_BRK: load = KERNAL,   type = ro, start = $EAEB;        # low byte equals high byte of C816_GETIN_THUNK, high byte = nop
	C816_GETIN_THUNK: load = KERNAL, type = ro, start = $EBEF;  # low byte equals high byte of C816_COP_NATIVE, high byte equals low byte of C816_BRK
	C816_NMIB: load = KERNAL, type = ro, start = $EE4C;         # low byte: JMP abs, high byte equals low byte of CLOCK_TIMER
	CLOCK_TIMER: load = KERNAL, type = ro, start = $EEEE;       # low byte equals high byte of C816_NMIB
	C816_COP_NATIVE: load = KERNAL,   type = ro, start = $EF4C; # low byte: JMP abs, high byte equals low byte of C816_GETIN_THUNK
	C816_COP_EMULATED: load = KERNAL, type = ro;
	I2C:      load = KERNAL,   type = ro;
	RTC:      load = KERNAL,   type = ro;
	NVRAM:    load = KERNAL,   type = ro;
	BEEP:     load = KERNAL,   type = ro;
	ENTROPY:  load = KERNAL,   type = ro;
	MACHINE:  load = KERNAL,   type = ro;
	MEMDRV:   load = KERNAL,   type = ro;
	NMI:      load = KERNAL,   type = ro;
	IRQ:      load = KERNAL,   type = ro;
	UTIL:     load = KERNAL,   type = ro;
	GRAPH:    load = KERNAL,   type = ro;
	CONSOLE:  load = KERNAL,   type = ro;
	SPRITES:  load = KERNAL,   type = ro;
	VERA_DRV: load = KERNAL,   type = ro;
	PALETTE:  load = KERNAL,   type = ro, align = $100;
	KERNRAM:  load = KERNAL,   run = KERNRAM,  type = ro, define = yes;
	KERNRAM2: load = KERNAL,   run = KERNRAM2, type = ro, define = yes;
	KRAM816:  load = KERNAL,   run = KRAM816,  type = ro, define = yes;
	VECB0:    load = KERNAL,   run = VECB0, type = ro, define = yes;
	JMPTBL:   load = JMPTBL,   type = ro;
	VECTORS:  load = VECTORS,  type = ro;
}
